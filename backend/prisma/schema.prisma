datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int           @id @default(autoincrement())
  email             String        @unique
  password          String?
  name              String?
  googleId          String?       @unique
  facebookId        String?       @unique
  appleId           String?       @unique
  credits           Int           @default(90) // 3 months of credits
  isSubscribed      Boolean       @default(false)
  subscriptionEnds  DateTime?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  rides             Ride[]
  cars              Car[]
}

model Car {
  id        Int      @id @default(autoincrement())
  model     String
  plate     String   @unique
  latitude  Float
  longitude Float
  isActive  Boolean  @default(true)
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  rides     Ride[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ride {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  carId       Int
  car         Car      @relation(fields: [carId], references: [id])
  startLat    Float
  startLong   Float
  endLat      Float
  endLong     Float
  status      String   // "pending", "in_progress", "completed", "cancelled"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OTP {
  id        Int      @id @default(autoincrement())
  code      String
  email     String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  email     String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

